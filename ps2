#!/bin/sh

# PS2 images played with PCSX2
# Usage: ps2 [-l|-g] <gamepat> [-cfg]
# gamepat may be substring or glob pattern
# -cfg invokes GUI w/o CD for per-game config; run PCSXR2 itself for default
# if more than one match, pops up selection dialog or just lists matches if -l
# if no gamepat, lists all games or pops up selection dialog if -g

gamesdir=("$HOME/games/ps2")
# iso ISO
# bin->cue
ext=(iso bin)

# set bb, df based on gamepat and skip gamepat args
. /usr/local/share/img-game.sh

confdir="$HOME/.config/PCSX2"

# Now the game is known; make per-game config
if [ ! -f "$confdir/inis/PCSX2_ui.ini" ]; then
	echo "Configure PCSX2 once first!"
	exit 1
fi
mkdir -p "$confdir/games/$bb/memcards"
(
	cd "$confdir/games/$bb"
	ln -s ../../inis/* . 2>/dev/null
	if [ -h PCSX2_ui.ini ]; then
		rm PCSX2_ui.ini
		sed -e 's#^\(MemoryCards=\).*#\1'"$confdir/games/$bb/memcards#" ../../inis/PCSX2_ui.ini>PCSX2_ui.ini
	fi
	for x in Mcd00{1,2}.ps2; do
		test -f memcards/$x || cp ../../memcards/blank.ps2 memcards/$x
	done
)
# -cfg option to set per-game config
if [ "x-cfg" = "x$1" ]; then
        # convert soft links to files to avoid overwriting global config
	cd "$confdir/games/$bb"
	find -name \*.ini -type l | while read x; do
		rm -f $x
		cp ../../inis/$x .
	done
	# when done, convert files identical to global config back to links
	trap '
	find -name \*.ini -type f | while read x; do
		cmp $x ../../inis/$x >/dev/null 2>&1 && ln -sf ../../inis/$x .
	done
	' 0
	PCSX2 --cfgpath "$confdir"/games/"$bb" --nodisc
else
	exec PCSX2 --cfgpath "$confdir"/games/"$bb" --fullscreen "$df" "$@"
fi
