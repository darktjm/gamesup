#!/bin/sh

# PSX images played with pcsx-r
# Usage: psx [-l|-g] <gamepat> [-cfg]
# gamepat may be substring or glob pattern
# -cfg invokes GUI w/o CD for per-game config; run pcsxr itself for default
# if more than one match, pops up selection dialog or just lists matches if -l
# if no gamepat, lists all games or pops up selection dialog if -g

#gamesdir=("$HOME/games/psx")
gamesdir=(/usr/local/games/psx)
# mdf->mds
# img->ccd +sub
# bin->cue (requires editing)
# iso standalone (some .bins as well)
ext=(bin img mdf iso)

# set bb, df based on gamepat and skip gamepat args
. /usr/local/share/img-game.sh

confdir="$HOME/.pcsxr"

# Now the game is known; make per-game config
if [ ! -d "$confdir/plugins" -o ! -f "$confdir/pcsxr.cfg" ]; then
	echo "Configure pcsxr once first!"
	exit 1
fi
mkdir -p "$confdir/games/$bb"
(
	cd "$confdir/games/$bb"
	ln -s ../../plugins/* . 2>/dev/null
	test -f pcsxr.cfg || \
	   sed -e "s%^\(Mcd\([12]\)\).*%\1 = $confdir/memcards/$bb\2.mcd%" \
	       -e "s%.pcsxr/plugins%.pcsxr/games/$bb%" \
	          ../../pcsxr.cfg > pcsxr.cfg
)
# -cfg option to set per-game config
if [ "x-cfg" = "x$1" ]; then
        # convert soft links to files to avoid overwriting global config
	cd "$confdir/games/$bb"
	find -name \*.cfg -type l | while read x; do
		rm -f $x
		cp ../../plugins/$x .
	done
	# when done, convert files identical to global config back to links
	trap '
	find -name \*.cfg -type f | while read x; do
		cmp $x ../../plugins/$x >/dev/null 2>&1 && ln -sf ../../plugins/$x .
	done
	' 0
	pcsxr -cfg games/"$bb"/pcsxr.cfg
else
	# used to use "taksset 1", but I'm not sure it's needed
	exec pcsxr -cfg games/"$bb"/pcsxr.cfg -psxout -cdfile "$df" "$@"
fi
